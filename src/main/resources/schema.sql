
DROP TABLE IF EXISTS CUSTOMER CASCADE;
CREATE TABLE CUSTOMER
( id uuid NOT NULL,
  firstname VARCHAR(50) NOT NULL,
  lastname VARCHAR(50) NOT NULL,
  gender VARCHAR(10) NOT NULL,

  PRIMARY KEY (id)
);

DROP TABLE IF EXISTS SELLER CASCADE;
CREATE TABLE SELLER
( id uuid NOT NULL,
  name VARCHAR(50) NOT NULL,

  PRIMARY KEY (id)
);

DROP TABLE IF EXISTS PRODUCT CASCADE;
CREATE TABLE PRODUCT
( id uuid NOT NULL,
  name VARCHAR(50) NOT NULL,
  price FLOAT NOT NULL,
  categorie VARCHAR(50) NOT NULL,
  description VARCHAR(500) NOT NULL,

  PRIMARY KEY (id)
);

DROP TABLE IF EXISTS STOCK CASCADE;
CREATE TABLE STOCK
( id uuid NOT NULL,
  quantity VARCHAR(50) NOT NULL,
  product uuid NOT NULL,
  seller uuid NOT NULL,

  PRIMARY KEY (id),
  FOREIGN KEY (product) REFERENCES PRODUCT(id),
  FOREIGN KEY (seller) REFERENCES SELLER(id)
);

DROP TABLE IF EXISTS ORDERED CASCADE;
CREATE TABLE ORDERED
( id uuid NOT NULL,
  customer uuid NOT NULL,

  PRIMARY KEY (id),
  FOREIGN KEY (customer) REFERENCES CUSTOMER(id)
);

DROP TABLE IF EXISTS ORDEREDITEM CASCADE;
CREATE TABLE ORDEREDITEM
( id uuid NOT NULL,
  quantity INTEGER NOT NULL,
  price FLOAT NOT NULL,
  stock uuid NOT NULL,
  ordered uuid NOT NULL,

  PRIMARY KEY (id),
  FOREIGN KEY (stock) REFERENCES STOCK(id),
  FOREIGN KEY (ordered) REFERENCES ORDERED(id)
);

DROP TABLE IF EXISTS BASKET CASCADE;
CREATE TABLE BASKET
( id uuid NOT NULL,
  customer uuid NOT NULL,

  PRIMARY KEY (id),
  FOREIGN KEY (customer) REFERENCES CUSTOMER(id)
);

DROP TABLE IF EXISTS BASKETITEM CASCADE;
CREATE TABLE BASKETITEM
( id uuid NOT NULL,
  quantity INTEGER NOT NULL,
  price FLOAT NOT NULL,
  stock uuid NOT NULL,
  basket uuid NOT NULL,

  PRIMARY KEY (id),
  FOREIGN KEY (stock) REFERENCES STOCK(id),
  FOREIGN KEY (basket) REFERENCES BASKET(id)
);